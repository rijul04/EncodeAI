{"version":3,"sources":["../src/cli.ts"],"sourcesContent":["import * as readline from \"readline/promises\";\nimport { service, context, input, extension, output } from \"@daydreamsai/core\";\nimport { z } from \"zod\";\n\nexport const readlineService = service({\n  register(container) {\n    container.singleton(\"readline\", () =>\n      readline.createInterface({\n        input: process.stdin,\n        output: process.stdout,\n      })\n    );\n  },\n});\n\nexport const cli = context({\n  type: \"cli\",\n  key: ({ user }) => user.toString(),\n  schema: { user: z.string() },\n  inputs: {\n    \"cli:message\": input({\n      async subscribe(send, { container }) {\n        const rl = container.resolve<readline.Interface>(\"readline\");\n\n        const controller = new AbortController();\n\n        while (!controller.signal.aborted) {\n          const question = await rl.question(\"> \");\n          if (question === \"exit\") {\n            break;\n          }\n          console.log(\"User:\", question);\n          send(cli, { user: \"admin\" }, question);\n        }\n\n        return () => {\n          controller.abort();\n        };\n      },\n    }),\n  },\n  outputs: {\n    \"cli:message\": output({\n      description: \"Send messages to the user\",\n      instructions: \"Use plain text\",\n      schema: z.string(),\n      handler(data) {\n        console.log(\"Agent:\", { data });\n        return {\n          data,\n        };\n      },\n      examples: [\n        `<output type=\"cli:message\">Hi, How can I assist you today?</output>`,\n      ],\n    }),\n  },\n});\n\nexport const cliExtension = extension({\n  name: \"cli\",\n  contexts: {\n    cli,\n  },\n  services: [readlineService],\n});\n"],"mappings":"AAAA,UAAYA,MAAc,oBAC1B,OAAS,WAAAC,EAAS,WAAAC,EAAS,SAAAC,EAAO,aAAAC,EAAW,UAAAC,MAAc,oBAC3D,OAAS,KAAAC,MAAS,MAEX,IAAMC,EAAkBN,EAAQ,CACrC,SAASO,EAAW,CAClBA,EAAU,UAAU,WAAY,IACrB,kBAAgB,CACvB,MAAO,QAAQ,MACf,OAAQ,QAAQ,MAClB,CAAC,CACH,CACF,CACF,CAAC,EAEYC,EAAMP,EAAQ,CACzB,KAAM,MACN,IAAK,CAAC,CAAE,KAAAQ,CAAK,IAAMA,EAAK,SAAS,EACjC,OAAQ,CAAE,KAAMJ,EAAE,OAAO,CAAE,EAC3B,OAAQ,CACN,cAAeH,EAAM,CACnB,MAAM,UAAUQ,EAAM,CAAE,UAAAH,CAAU,EAAG,CACnC,IAAMI,EAAKJ,EAAU,QAA4B,UAAU,EAErDK,EAAa,IAAI,gBAEvB,KAAO,CAACA,EAAW,OAAO,SAAS,CACjC,IAAMC,EAAW,MAAMF,EAAG,SAAS,IAAI,EACvC,GAAIE,IAAa,OACf,MAEF,QAAQ,IAAI,QAASA,CAAQ,EAC7BH,EAAKF,EAAK,CAAE,KAAM,OAAQ,EAAGK,CAAQ,CACvC,CAEA,MAAO,IAAM,CACXD,EAAW,MAAM,CACnB,CACF,CACF,CAAC,CACH,EACA,QAAS,CACP,cAAeR,EAAO,CACpB,YAAa,4BACb,aAAc,iBACd,OAAQC,EAAE,OAAO,EACjB,QAAQS,EAAM,CACZ,eAAQ,IAAI,SAAU,CAAE,KAAAA,CAAK,CAAC,EACvB,CACL,KAAAA,CACF,CACF,EACA,SAAU,CACR,qEACF,CACF,CAAC,CACH,CACF,CAAC,EAEYC,EAAeZ,EAAU,CACpC,KAAM,MACN,SAAU,CACR,IAAAK,CACF,EACA,SAAU,CAACF,CAAe,CAC5B,CAAC","names":["readline","service","context","input","extension","output","z","readlineService","container","cli","user","send","rl","controller","question","data","cliExtension"]}